ARG CUDA_IMAGE="12.2.2-devel-ubuntu22.04"
FROM --platform=amd64 nvidia/cuda:${CUDA_IMAGE}

## Top level args / env vars
ARG USER=user
ARG USER_UID=1000
ARG USER_GID=$USER_UID
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV DEBIAN_FRONTEND=noninteractive

## Apt based dependencies
RUN apt-get update -y \
    && apt-get upgrade -y \
    && apt-get -y install \
    curl \
    wget \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

## Install python + opencl + blas
RUN apt-get update && apt-get upgrade -y \
    && apt-get install -y git build-essential \
       python3 python3-dev python3-pip python-is-python3 gcc wget \
       ocl-icd-opencl-dev opencl-headers clinfo \
       libclblast-dev libopenblas-dev libcairo2-dev \
       openmpi-bin openmpi-doc libopenmpi-dev \
       && rm -rf /var/lib/apt/lists/*


## Create unpriv user
RUN groupadd --gid $USER_GID $USER \
    && useradd --uid $USER_UID --gid $USER_GID -m $USER \
    && apt-get update \
    && apt-get install -y sudo \
    && echo $USER ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USER \
    && chmod 0440 /etc/sudoers.d/$USER \
    && chown -R $USER:$USER /home/$USER

USER ${USER}
RUN python3 -m pip install --user poetry
WORKDIR /home/${USER}/
ENV PATH="/home/${USER}/.local/bin:${PATH}"
COPY poetry.lock pyproject.toml poetry.toml ./
RUN python3 -m poetry install --extras "hub" --no-root
COPY --chown=${USER_UID}:${USER_GID} . .
RUN python3 -m poetry install --extras "hub"
