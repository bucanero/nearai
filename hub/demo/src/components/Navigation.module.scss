/*
TODO:
 - vertically center the navbar
 - hover states for the dropdown
 - active states for the dropdown?
 - accessibility: use a <button> instead of asChild-<span> for the dropdown trigger
 */

.navigation {
  position: sticky;
  z-index: 500;
  top: 0;
  width: 100%;
  height: var(--header-height);
  background: var(--sand-0);
  display: flex;
  align-items: stretch;
  padding: 0 var(--gap-m);
  box-shadow: 0 0 1rem rgba(0, 0, 0, 0.1),
  0 1px 0 var(--sand-4);
}

.logo {
  display: flex;
  align-items: center;
  text-decoration: none;
  font: var(--text-l);
  color: var(--sand-12);
  transition: var(--transitions);
  outline: none;
  white-space: nowrap;
  margin-right: auto;

  &:hover,
  &:focus-visible {
    color: var(--violet-10);
  }
}

.item {
  display: flex;
  align-items: center;
  font: var(--text-s);
  font-weight: 600;
  text-decoration: none;
  color: var(--sand-12);
  transition: var(--transitions);
  border-radius: 100px;
  height: 32px;
  padding: 0 16px;
  outline: none;

  &:hover,
  &:focus-visible {
    color: var(--violet-10);
  }

  &[data-active='true'] {
    background: var(--sand-4);
  }
}

.breakpoint {
  display: flex;
  align-items: stretch;
}

.NavigationMenuRoot {
  position: relative;
  display: flex;
  justify-content: center;
  z-index: 1;
  height: 100%;
}

.NavigationMenuTrigger,
.NavigationMenuLink {
  padding: 8px 12px;
  outline: none;
  user-select: none;

  font-weig
  .dropdownItem {

  }

  ht: 500;
  line-height: 1;
  border-radius: 4px;
  font-size: 15px;
  color: var(--violet-11);
}

.NavigationMenuTrigger:focus,
.NavigationMenuLink:focus {
  box-shadow: 0 0 0 2px var(--violet-7);
}

.NavigationMenuTrigger:hover,
.NavigationMenuLink:hover {
  background-color: var(--violet-3);
}

.NavigationMenuTrigger {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 2px;
}

.NavigationMenuLink {
  display: block;
  text-decoration: none;
  font-size: 15px;
  line-height: 1;
}

.NavigationMenuContent {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  animation-duration: 250ms;
  animation-timing-function: ease;
}

.NavigationMenuContent[data-motion="from-start"] {
  animation-name: enterFromLeft;
}

.NavigationMenuContent[data-motion="from-end"] {
  animation-name: enterFromRight;
}

.NavigationMenuContent[data-motion="to-start"] {
  animation-name: exitToLeft;
}

.NavigationMenuContent[data-motion="to-end"] {
  animation-name: exitToRight;
}

@media only screen and (min-width: 600px) {
  .NavigationMenuContent {
    width: auto;
  }
}

.NavigationMenuIndicator {
  display: flex;
  align-items: flex-end;
  justify-content: center;
  height: 10px;
  top: 100%;
  overflow: hidden;
  z-index: 1;
  transition: width,
  transform 250ms ease;
}

.NavigationMenuIndicator[data-state="visible"] {
  animation: fadeIn 200ms ease;
}

.NavigationMenuIndicator[data-state="hidden"] {
  animation: fadeOut 200ms ease;
}

.NavigationMenuViewport {
  position: relative;
  transform-origin: top center;
  margin-top: 10px;
  width: 100%;
  overflow: hidden;

  min-width: 10rem;
  max-width: 100vw;
  background-color: var(--sand-1);
  border-radius: 6px;
  padding: 4px;
  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.1);
  border: 1px solid var(--sand-4);
  animation-duration: var(--transition-speed);
  z-index: 2000;
  will-change: transform, opacity;

  height: var(--radix-navigation-menu-viewport-height);
  transition: width,
  height,
  300ms ease;
}

.NavigationMenuViewport[data-state="open"] {
  animation: scaleIn 200ms ease;
}

.NavigationMenuViewport[data-state="closed"] {
  animation: scaleOut 200ms ease;
}

@media only screen and (min-width: 600px) {
  .NavigationMenuViewport {
    width: var(--radix-navigation-menu-viewport-width);
  }
}

.ViewportPosition {
  position: absolute;
  display: flex;
  justify-content: center;
  width: 100%;
  top: 100%;
  left: 0;
  perspective: 2000px;
}

@keyframes enterFromRight {
  from {
    opacity: 0;
    transform: translateX(200px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes enterFromLeft {
  from {
    opacity: 0;
    transform: translateX(-200px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes exitToRight {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(200px);
  }
}

@keyframes exitToLeft {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(-200px);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: rotateX(-30deg) scale(0.9);
  }
  to {
    opacity: 1;
    transform: rotateX(0deg) scale(1);
  }
}

@keyframes scaleOut {
  from {
    opacity: 1;
    transform: rotateX(0deg) scale(1);
  }
  to {
    opacity: 0;
    transform: rotateX(-10deg) scale(0.95);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}


.dropdownTriggerItem {
  position: relative;
  cursor: default;
}

.dropdownItem {
  display: flex;
  align-items: center;
  gap: 8px;
  position: relative;
  color: var(--sand-12);
  border-radius: 4px;
  padding: 8px 12px;
  user-select: none;
  outline: none;
  font: var(--text-s);
  cursor: pointer;
  transition: var(--transitions);

  [data-icon][data-color='current'] {
    color: var(--sand-10) !important;
  }

  &[data-disabled] {
    opacity: 0.3;
    pointer-events: none;
  }

  &[data-highlighted],
  &[data-state='open'] {
    background-color: var(--sand-3);

    [data-icon] {
      color: var(--violet-10) !important;
    }
  }

  &:active {
    background-color: var(--sand-4);
  }
}

